package com.example.prescripto.controller;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.example.prescripto.entity.Doctor;
import com.example.prescripto.services.DoctorService;

@RestController
@RequestMapping("/doctor")
@CrossOrigin(origins = "http://localhost:5173")
public class DoctorController {
	@Autowired
	private DoctorService doctorService;

//	@PostMapping
//	public void addDoctor(@RequestBody Doctor doctor) {
//		System.out.println("name is" + doctor.getDoctorName());
//		doctorService.addDoctor(doctor);
//
//	}
	
	@PostMapping("/add")
    public void addDoctor(
            @RequestParam("doctorName") String doctorName,
            @RequestParam("doctorEmail") String doctorEmail,
            @RequestParam("doctorPassword") String doctorPassword,
            @RequestParam("doctorExperience") String doctorExperience,
            @RequestParam("doctorFees") Double doctorFees,
            @RequestParam("doctorSpeciality") String doctorSpeciality,
            @RequestParam("doctorDegree") String doctorDegree,
            @RequestParam("addressLineOne") String addressLineOne,
            @RequestParam("addressLineTwo") String addressLineTwo,
            @RequestParam("doctorAbout") String doctorAbout,
            @RequestParam("doctorImage") MultipartFile image) throws IOException {

        Doctor doctor = new Doctor();
        doctor.setDoctorName(doctorName);
        doctor.setDoctorEmail(doctorEmail);
        doctor.setDoctorPassword(doctorPassword);
        doctor.setDoctorExperience(doctorExperience);
        doctor.setDoctorFees(doctorFees);
        doctor.setDoctorSpeciality(doctorSpeciality);
        doctor.setDoctorDegree(doctorDegree);
        doctor.setAddressLineOne(addressLineOne);
        doctor.setAddressLineTwo(addressLineTwo);
        doctor.setDoctorAbout(doctorAbout);
        doctor.setDoctorImage(image.getBytes()); // Convert image to byte array

        doctorService.addDoctor(doctor);
    }
	
	
	@GetMapping
	public List<Doctor> getAllDoctors(){
		return doctorService.getAllDoctors();
		
	}
}
